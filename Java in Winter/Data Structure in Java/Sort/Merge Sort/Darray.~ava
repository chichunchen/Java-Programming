public class Darray {
  
  private long[] theArray;
  private int nElems;
  
  public Darray( int max ) {
    theArray = new long[ max ];
    nElems = 0;
  } 
  
  public void insert( long value ) {
    theArray[ nElems ] = value;
    nElems++;
  }
  
  public void display() {
    for( int i = 0; i < nElems; i++ ) {
      System.out.print( theArray[ i ] + " " );
    }
    System.out.println( " " );
  }
  
  public void mergeSort() {
    long[] workSpace = new long[ nElems ];    //provide empty workSpace
    recMergeSort( workSpace, 0, nElems-1 );
  }
  
  private void recMergeSort( long[] workSpace, int lowerBound, int upperBound ) {
    if( lowerBound == upperBound )
    return;
    else {
      
      int mid = ( lowerBound + upperBound ) / 2;
      
      recMergeSort( workSpace, lowerBound, mid );
      
      recMergeSort( workSpace, mid + 1, upperBound );
      
      merge( workSpace, lowerBound, mid + 1, upperBound );
    } 
    
  private void merge ( long[] workSpace, int lowPtr, int highPtr, int upperBound ) {
      
  }
}
